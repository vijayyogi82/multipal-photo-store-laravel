//**** model

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class FeedImage extends Model
{
    use HasFactory;

    protected $fillable = [
        'feed_id',
        'photo'
    ];

    public function feeds()
    {
        return $this->hasMany(FeedImages::class, 'feed_id');
    }

}



//**** controller

$files = [];
        if ($request->hasfile('photo')) {
            foreach ($request->file('photo') as $key => $file) {
                $name = time() . rand(1, 100) . '.' . $file->extension();
                $file->move(public_path('storage/photo'), $name);
                $files[$key] = $name;
            }
        }

        foreach ($request->file('photo') as $key => $file) {
            $feedImage = new FeedImage();
            $feedImage->photo = $files[$key];
            $feedImage->feed_id = $feeds->id;
            $feedImage->save();
        }

// ***** table

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateFeedImagesTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('feed_images', function (Blueprint $table) {
            $table->id();
            $table->string('photo')->nullable();
            $table->foreignId('feed_id')->constrained();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('feed_images');
    }
}
